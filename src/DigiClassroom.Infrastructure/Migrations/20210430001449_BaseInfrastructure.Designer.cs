// <auto-generated />
using System;
using DigiClassroom.Infrastructure.DBConfig;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DigiClassroom.Infrastructure.Migrations
{
    [DbContext(typeof(DigiClassroomContext))]
    [Migration("20210430001449_BaseInfrastructure")]
    partial class BaseInfrastructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssingmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContentAnswer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssingmentId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Assingment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Pontuation")
                        .HasPrecision(4, 2)
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Assingments");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("LocationClassroom")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssingmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.HasIndex("AssingmentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Library", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.LibraryFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LocatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LibraryFile");
                });

            modelBuilder.Entity("LibraryLibraryFile", b =>
                {
                    b.Property<Guid>("FilesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LibrariesId")
                        .HasColumnType("uuid");

                    b.HasKey("FilesId", "LibrariesId");

                    b.HasIndex("LibrariesId");

                    b.ToTable("LibraryLibraryFiles");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Announcement", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.Classroom", null)
                        .WithMany("Announcements")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Answer", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.Assingment", null)
                        .WithMany("Answers")
                        .HasForeignKey("AssingmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Assingment", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.Classroom", null)
                        .WithMany("Assingments")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Comment", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.Assingment", null)
                        .WithMany("Comments")
                        .HasForeignKey("AssingmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Library", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.Classroom", "Classroom")
                        .WithOne("Library")
                        .HasForeignKey("DigiClassroom.Infrastructure.Models.Library", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("LibraryLibraryFile", b =>
                {
                    b.HasOne("DigiClassroom.Infrastructure.Models.LibraryFile", null)
                        .WithMany()
                        .HasForeignKey("FilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiClassroom.Infrastructure.Models.Library", null)
                        .WithMany()
                        .HasForeignKey("LibrariesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Assingment", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DigiClassroom.Infrastructure.Models.Classroom", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Assingments");

                    b.Navigation("Library");
                });
#pragma warning restore 612, 618
        }
    }
}
